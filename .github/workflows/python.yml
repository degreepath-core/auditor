---
name: Test and Publish

'on':
  - push

jobs:
  cpython-test:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.8']

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run:
          pip install
            -r requirements.txt
            -r requirements-dev.txt
            -r requirements-server.txt
            -r requirements-test.txt

      - name: Lint with flake8
        run: |
          flake8 --count --show-source --statistics dp/

      - name: Check with mypy
        run: |
          mypy --pretty dp/

      - name: Test with pytest
        run: |
          pytest tests/ dp/

  check-runs:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 4
      matrix:
        python-version:
          - '3.6'
          - '3.7'
          - '3.8'
          - pypy3

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Test that the thing runs
        run: |
          python3 -m dp --help
          python3 -m dp.bin.validate --help
          python3 -m dp.bin.discover --help

  github-registry:
    runs-on: ubuntu-latest
    needs: cpython-test
    if: github.ref == 'refs/heads/stable'

    env:
      REPO: ghcr.io/degreepath/degreepath

    steps:
      - uses: actions/checkout@v1

      - name: Login
        run: |
          echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u hawkrives --password-stdin

      - name: Set tag
        run: |
          echo ::set-env name=TAG::"$(date +%s)"
    
      - name: Build
        run: |
          docker pull "$REPO:stable"
          docker build . --file Dockerfile --tag "$REPO:$TAG" --cache-from "$REPO:stable"

      - name: Push (timestamp)
        run: |
          docker push "$REPO:$TAG"

      - name: Push (branch)
        run: |
          BRANCH="${GITHUB_REF#refs/heads/}"
          docker tag "$REPO:$TAG" "$REPO:$BRANCH"
          docker push "$REPO:$BRANCH"
