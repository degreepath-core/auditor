---
name: Test and Publish

'on':
  - push

jobs:
  cpython-test:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 4
      matrix:
        python-version:
          - 3.6
          - 3.7
          - 3.8

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run:
          pip install
            -r requirements.txt
            -r requirements-dev.txt
            -r requirements-server.txt

      - name: Lint with flake8
        run: |
          flake8 --count --show-source --statistics dp/

      - name: Check with mypy
        run: |
          mypy --pretty dp/

      - name: Test with pytest
        run: |
          pytest tests/ dp/

  pypy-test:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 4
      matrix:
        python-version:
          - pypy3

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Install Pytest
        run: pip install pytest

      - name: Test with pytest
        run: |
          pytest tests/ dp/

  docker:
    runs-on: ubuntu-latest

    needs: cpython-test

    env:
      REPO: docker.io/degreepath/degreepath

    steps:
      - uses: actions/checkout@v1

      - name: Docker Login
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set tag
        run: |
          echo ::set-env name=TAG::"$(date +%s)"

      - name: Docker Build
        run: |
          docker build . --file Dockerfile --tag "$REPO:$TAG"

      - name: Docker Push
        run: |
          docker push "$REPO:$TAG"
